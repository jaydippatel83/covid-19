{"version":3,"sources":["images/logo.webp","total.jsx","district.jsx","App.js","serviceWorker.js","redux/reducer/reducer.js","index.js"],"names":["module","exports","Total","state","dist","fetch","then","res","json","data","setState","statewise","catch","console","log","this","className","lastupdatedtime","active","confirmed","recovered","deaths","Component","District","pid","props","id","distData","X","districtData","display","Object","keys","map","d","key","style","position","connect","App","states","search","searchSpace","event","keyword","target","value","alt","src","logo","width","height","type","placeholder","onChange","e","scope","filter","toLowerCase","includes","st","index","onClick","cid","dispatch","payload","Boolean","window","location","hostname","match","iState","reducer","action","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cc97917e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fa2454ff.webp\";","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass Total extends Component {\n    state = {\n        dist: [],\n    }\n    componentDidMount() {\n        fetch('https://api.covid19india.org/data.json')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ dist: data.statewise[0] })\n            })\n            .catch(console.log)\n    }\n\n    render() {\n        const data = this.state.dist; \n        return (\n            <div>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h2 className=\"text-primary\">INDIA COVID-19 TRACKER</h2>\n                            <p className=\"font-weight-bold text-secondary\">Last Update : {data.lastupdatedtime}</p> \n                        </div>\n                    </div>\n                    <div className=\"row justify-content-around\">\n                        <div className=\"col-lg-3 box-a\">\n                            <p className=\"active font-weight-bold\">Active</p>\n                            <h3 className=\"font-weight-bold text-primary\"> {data.active}</h3>\n                        </div>\n                        <div className=\"col-3 box-b\">\n                            <p className=\"confirm font-weight-bold\">Confirmed</p>\n                            <h3 className=\"font-weight-bold text-warning\"> {data.confirmed}</h3>\n                        </div>\n                        <div className=\"col-3 box-c\">\n                            <p className=\"recover font-weight-bold\">Recovered</p>\n                            <h3 className=\"font-weight-bold text-success\"> {data.recovered}</h3>\n                        </div>\n                        <div className=\"col-3 box-d\">\n                            <p className=\"death font-weight-bold\">Deaths</p>\n                            <h3 className=\"font-weight-bold text-danger\"> {data.deaths}</h3>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Total;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass District extends Component {\n    state = {\n        dist: [],\n    }\n    componentDidMount() {\n        fetch(' https://api.covid19india.org/state_district_wise.json')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ dist: data })\n\n\n            })\n            .catch(console.log)\n    }\n\n    render() {\n        const pid = this.props.id;\n        const data = this.state.dist;\n        let distData = null;\n        for (let X in data[pid]) {\n            distData = data[pid].districtData;\n        }\n        const display = distData ? Object.keys(distData).map((d, key) => {\n            console.log(distData, \"data\"); \n            return (\n                <li className=\"list-group-item d-flex justify-content-between\" key={key}>\n                    {d}\n                    <span>{distData[d].confirmed}</span>\n                </li>\n            );\n        }) : null\n        return (\n            <div>\n                <div className=\"container-fluid\" style={{position:'absolute'}}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h2 className=\"text-primary text-uppercase\">{pid === '' ? 'India' : pid}</h2>\n                            <p className=\"font-weight-bold text-secondary\">State Records</p>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-10 dist-height mb-4 pb-3\">\n                            <ul className=\"list-group\">\n                                {display}\n                            </ul> \n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        id: state.id\n    }\n}\nexport default connect(mapStateToProps, null)(District);\n","import React, { Component } from 'react';\nimport logo from '../src/images/logo.webp';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Total from './total';\nimport District from './district';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  state = {\n    states: [],\n    search: ''\n  }\n  componentDidMount() {\n    fetch('https://api.covid19india.org/data.json')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ states: data })\n      })\n      .catch(console.log)\n  }\n  searchSpace = (event) => {\n    let keyword = event.target.value;\n    this.setState({ search: keyword })\n  }\n\n\n  render() {\n    const data = this.state.states.statewise; \n    return (\n      <div>\n        <div className=\"container-fluid  box-shadow\">\n          <div className=\"row\">\n            <div className=\"col d-flex justify-content-start\">\n              <img alt=\"logo\" className=\"App-logo\" src={logo} style={{ width: '110px', height: '80px' }} />\n              <h2 className=\"pt-3 pb-3 pr-3 text-light\">COVID19 Live Update</h2>\n            </div>\n          </div>\n        </div>\n        <div className=\"container-fluid mt-3\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <Total />\n            </div>\n            <div className=\"col-6\">\n              <District />\n            </div>\n          </div>\n          <div className=\"row  mt-4 mb-2\">\n            <div className=\"col-6\">\n              <div className=\"col-12 d-flex justify-content-between\">\n                <h2 className=\"text-primary\">STATES</h2>\n                <div className=\" \" id=\"search-container\">\n                  <input type=\"text\" placeholder=\"Search\" onChange={(e) => this.searchSpace(e)} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6 table-height\">\n              <table className=\"table responsive \">\n                <thead className=\"sticky\">\n                  <tr>\n                    <th className=\"text-secondary\" scope=\"col\">State</th>\n                    <th className=\"text-primary\" scope=\"col\">Active</th>\n                    <th className=\"text-warning\" scope=\"col\">Confirmed</th>\n                    <th className=\"text-success\" scope=\"col\">Recovered</th>\n                    <th className=\"text-danger\" scope=\"col\">Deaths</th>\n                  </tr>\n                </thead>\n                {\n                  data ? data.filter((data) => {\n                    if (this.state.search == null)\n                      return data\n                    else if (data.state.toLowerCase().includes(this.state.search.toLowerCase()) || data.state.toLowerCase().includes(this.state.search.toLowerCase())) {\n                      return data\n                    }\n                  }).map((st, index) => {\n                    return (\n                      <tbody key={index}>\n                        <tr onClick={()=>this.props.cid(st.state)}>\n                          <th scope=\"row\">{st.state}</th>\n                          <td>{st.active}</td>\n                          <td>{st.confirmed}</td>\n                          <td>{st.recovered}</td>\n                          <td>{st.deaths}</td>\n                        </tr>\n                      </tbody>\n                    )\n                  }) : null\n                }\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n \nconst mapDispatchToProps = (dispatch) => {\n  return{\n    cid:(id)=>{dispatch({type:'ADD_ID',payload:id})}\n  }\n}\n\nexport default connect(null,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nconst iState={\n    id:'',\n}\nconst reducer=(state=iState,action)=>{\n    if(action.type === 'ADD_ID'){ \n        state.id=action.payload\n        return{ \n            ...state\n        }\n    }\n    return{...state};\n}\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; \nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux'; \nimport reducer from './redux/reducer/reducer';\n\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}